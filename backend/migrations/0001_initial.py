# Generated by Django 3.0.2 on 2020-09-17 16:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('UserID', models.CharField(max_length=100, verbose_name='user ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('gender', models.CharField(max_length=6, verbose_name='gender')),
                ('date_of_birth', models.DateField(verbose_name='date of birth')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=30, verbose_name='phone number')),
                ('address', models.CharField(default='null', max_length=255, verbose_name='address')),
                ('image', models.ImageField(default='image not uploaded', null=True, upload_to='')),
                ('licenseNumber', models.CharField(default='null', max_length=150, verbose_name='License number')),
                ('is_MP', models.BooleanField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BloodPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloodPressure', models.CharField(max_length=50, verbose_name='blood pressure')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='created')),
            ],
            options={
                'verbose_name': 'BloodPressure',
                'verbose_name_plural': 'BloodPressures',
                'ordering': ['-created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorID', models.CharField(max_length=100, verbose_name='user ID')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL)),
                ('patients', models.ManyToManyField(related_name='patients', to=settings.AUTH_USER_MODEL, verbose_name='patients')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MedicalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloodPressure', models.ManyToManyField(to='backend.BloodPressure', verbose_name='blood pressure')),
            ],
            options={
                'verbose_name': 'MedicalData',
                'verbose_name_plural': 'MedicalDatas',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicineName', models.CharField(max_length=150, verbose_name='medicine name')),
                ('dosagePerIntake', models.IntegerField(verbose_name='dosage per intake')),
                ('timesPerDay', models.IntegerField(verbose_name='times per day')),
                ('hoursIntervalsPerDay', models.IntegerField(verbose_name='hours intervals per day')),
                ('totaldosage', models.IntegerField(verbose_name='total dosage')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicationreceiver', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicationsender', to='backend.Doctor', verbose_name='sender')),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='title')),
                ('text', models.CharField(max_length=150, verbose_name='text')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='created')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='backend.Doctor', verbose_name='sender')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routine', models.CharField(max_length=150, verbose_name='routine')),
                ('start', models.DateTimeField(verbose_name='start')),
                ('end', models.DateTimeField(verbose_name='end')),
            ],
            options={
                'verbose_name': 'Routine',
                'verbose_name_plural': 'Routines',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.CharField(max_length=50, verbose_name='temperature')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='created')),
            ],
            options={
                'verbose_name': 'Temperature',
                'verbose_name_plural': 'Temperatures',
                'ordering': ['-created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testResult', models.ImageField(upload_to='')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='created')),
            ],
            options={
                'verbose_name': 'TestResult',
                'verbose_name_plural': 'TestResults',
                'ordering': ['-created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.CharField(max_length=50, verbose_name='weight')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='created')),
            ],
            options={
                'verbose_name': 'Weight',
                'verbose_name_plural': 'Weights',
                'ordering': ['-created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patientID', models.CharField(max_length=100, verbose_name='user ID')),
                ('aproved', models.ManyToManyField(related_name='aproved', to='backend.Doctor', verbose_name='aproved')),
                ('medicalData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicaldata', to='backend.MedicalData')),
                ('medication', models.ManyToManyField(related_name='medication', to='backend.Medication', verbose_name='medication')),
                ('notes', models.ManyToManyField(to='backend.Note', verbose_name='notes')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to=settings.AUTH_USER_MODEL, verbose_name='name')),
            ],
            options={
                'verbose_name': 'patient',
                'verbose_name_plural': 'patients',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='medicaldata',
            name='temperature',
            field=models.ManyToManyField(to='backend.Temperature', verbose_name='temperature'),
        ),
        migrations.AddField(
            model_name='medicaldata',
            name='testResult',
            field=models.ManyToManyField(to='backend.TestResult', verbose_name='test result'),
        ),
        migrations.AddField(
            model_name='medicaldata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='medicaldata',
            name='weight',
            field=models.ManyToManyField(to='backend.Weight', verbose_name='weight'),
        ),
    ]
